<?xml version="1.0" encoding="utf-8"?>
    <ScrollView
        xmlns:android="http://schemas.android.com/apk/res/android"
        xmlns:app="http://schemas.android.com/apk/res-auto"
        xmlns:tools="http://schemas.android.com/tools"
        android:layout_width="match_parent"
        android:layout_height="match_parent">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:orientation="vertical"
            android:padding="@dimen/space_24"
            tools:context=".view.ContactFormActivity">

            <TextView
                style="@style/AppTheme.FormHeader"
                android:text="@string/form_title" />

            <TextView
                style="@style/AppTheme.FormSubheader"
                android:layout_marginTop="@dimen/space_12"
                android:layout_marginBottom="@dimen/space_12"
                android:text="@string/form_subtitle" />

            <!-- TODO 01: Add a new TextInputLayout component-->
            <!-- TODO 02: Modify the  style to see the difference between OutlinedBox and FilledBox -->
            <!-- TODO 03: Change the hint text-->
            <!-- TODO 04: Define the helper text -->
            <!-- TODO 05: Define the starter icon -->
            <!-- TODO 06: Add clear button at the end of the textfield: endIconMode-->
            <com.google.android.material.textfield.TextInputLayout
                style="@style/AppTheme.TextField"
                app:startIconDrawable="@drawable/ic_perm_identity_black_24dp"
                app:helperText="@string/name_field_helper"
                app:endIconMode="clear_text">
                <com.google.android.material.textfield.TextInputEditText
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:hint="@string/name_field_hint" />
            </com.google.android.material.textfield.TextInputLayout>

            <!-- TODO 07: Create new TextField for a password. Use again endIconMode but
            with the corresponding inputType in order to hide password characters -->
            <!-- TODO 08: Let's validate password in order to see how errors look like in TextInputLayout -->
            <!-- TODO 09: We can use a character counter to give feedback to the user about the maximum
            number of characters allowed and the current number of characters typed: counterEnabled and counterMaxLenght-->
            <!-- TODO 10: We can customize the colors of the elements in the TextInputLayout -->
            <com.google.android.material.textfield.TextInputLayout
                android:id="@+id/passwordTextInput"
                style="@style/AppTheme.TextField"
                app:helperText="@string/password_field_helper"
                app:counterEnabled="true"
                app:counterMaxLength="8"
                app:endIconMode="password_toggle">
                <com.google.android.material.textfield.TextInputEditText
                    android:id="@+id/passwordEditText"
                    android:layout_width="match_parent"
                    android:inputType="textPassword"
                    android:layout_height="wrap_content"
                    android:hint="@string/password_field_hint" />
            </com.google.android.material.textfield.TextInputLayout>

        </LinearLayout>
    </ScrollView>